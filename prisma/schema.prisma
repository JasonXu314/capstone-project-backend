// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id String @id

    installation_id Int    @unique
    github_id       Int    @unique
    token           String @unique

    name String

    ownedProjects Project[]
    projects      Project[] @relation(name: "AccessTo")
}

model Project {
    id String @id

    ownerId String @unique
    url     String @unique

    name String

    owner         User          @relation(fields: [ownerId], references: [id], onDelete: Cascade)
    collaborators User[]        @relation(name: "AccessTo")
    ignoredPaths  IgnoredPath[]
    todos         TodoItem[]
    todoTypes     TodoType[]
}

model IgnoredPath {
    id        Int
    projectId String

    path String

    project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

    @@id([id, projectId])
}

model TodoItem {
    id        String
    projectId String

    type    String
    message String

    typeData TodoType @relation(fields: [type, projectId], references: [name, projectId], onDelete: Cascade)
    project  Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

    @@id([id, projectId])
}

model TodoType {
    name      String
    projectId String

    color String

    project Project    @relation(fields: [projectId], references: [id], onDelete: Cascade)
    todos   TodoItem[]

    @@id([name, projectId])
}
